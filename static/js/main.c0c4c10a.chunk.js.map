{"version":3,"sources":["Components/Text.js","Components/QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["Text","position","className","Data","quotes","quote","author","QuoteBox","useState","randomNumber","setRandom","console","log","onClick","random","Math","length","floor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAYeA,EATF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACX,OACI,gCACI,oBAAGC,UAAU,QAAb,cAAuBC,EAAKC,OAAOH,GAAUI,MAA7C,OACA,mBAAGH,UAAU,SAAb,SAAuBC,EAAKC,OAAOH,GAAUK,aCkB1CC,EArBE,WAAO,IAAD,EACgBC,mBAAS,KADzB,mBACZC,EADY,KACEC,EADF,KASnB,OAFAC,QAAQC,IAAIH,GAGR,qBAAKP,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,EAAD,CAAMD,SAAUQ,IAChB,wBAAQI,QAVO,WACvB,IAAMC,EAASC,KAAKD,UAAYX,EAAKC,OAAOY,OAAS,GACrDN,EAAUK,KAAKE,MAAMH,GAAU,IAQcZ,UAAU,SAA/C,6BCNDgB,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c0c4c10a.chunk.js","sourcesContent":["import Data from '../quotes.json'\r\nimport '../App.css'\r\n\r\nconst Text = ({position}) => {\r\n    return (\r\n        <div>\r\n            <p className=\"quote\">\"{Data.quotes[position].quote}\"</p>\r\n            <p className=\"author\">{Data.quotes[position].author}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text;","import React, {useState} from 'react';\r\nimport Data from '../quotes.json';\r\nimport Text from './Text.js';\r\n\r\nconst QuoteBox = () => {\r\n    const [randomNumber, setRandom ] = useState(100);\r\n\r\n    const handleRandomNumber = () => {\r\n        const random = Math.random() * (Data.quotes.length - 0);\r\n        setRandom(Math.floor(random) + 0);\r\n    }\r\n    console.log(randomNumber)\r\n\r\n    return (\r\n        <div className='box'>\r\n            <div className='quote'>\r\n                <Text position={randomNumber} />\r\n                <button onClick={handleRandomNumber} className='button'>\r\n                    New quote \r\n                </button>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteBox;","import './App.css';\nimport QuoteBox from './Components/QuoteBox.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}